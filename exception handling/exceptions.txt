exception :
----------------------------------------
public class AnotherHandle {
    public static void main(String[] args) {
        try {
            int a = 9 / 0;
            System.out.println(a);
        } catch (Throwable ex) {
            System.out.println("handle");
        }
    }
}
----------------------------------------
try with multiple catch : 
try -->catch 
single try -->multiple catch 

Multiplecatch1.java
public class Main {
    public static void main(String[] args) {
        try{
            int a=9/0;
            System.out.println(a);
        }
        catch(ArrayIndexOutOfBoundsException ex){
            System.out.println("second catch");
        }
         catch(ArithmeticException ex){
            System.out.println("first catch");
        }
    }
}

public class Main {
    public static void main(String[] args) {
        try{
            int a=9/0;
            System.out.println(a);
        }
        catch(ArithmeticException ex){
            System.out.println("exception class");
        }
        catch(Exception ex){
            System.out.println("throwable  ");
        }
    }
} 


------
Multiple3.java
public class Main {
    public static void main(String[] args) {
       try{
           int a=9/0;
           System.out.println(a);
           
           String name=null;
           System.out.println(name.length());
       }
       catch(ArithmeticException ex){
           System.out.println("arithemtic handle");
       }
       catch(NullPointerException ex){
           System.out.println("array");
       }
    }
} 
-------------------------------------------------------
nested try : 
public class Main {
    public static void main(String[] args) {
       try{ //outer try 
           try{//inner try 
               //code
           }
           catch(){
               
           }
       }
       catch(){
           
       }
    }
} 
------
public class Main {
    public static void main(String[] args) {
       try{
           try{
               int a=9/0;
           System.out.println(a);
           }
           catch(ArithmeticException ex){
               System.out.println("handle");
           }
       }
       catch(Exception ex){
           System.out.println("exception class ");
       }
    }
} 
-
public class Main {
    public static void main(String[] args) {
       try{
           try{
               int a=9/0;
           System.out.println(a);
           }
           catch(ArrayIndexOutOfBoundsException ex){
               System.out.println("handle");
           }
       }
       catch(Exception ex){
           System.out.println("exception class ");
       }
    }
} 
------------------
public class Main {
    public static void main(String[] args) {
       try{
           String name=null;
           System.out.println(name.length());
           try{
               int a=9/0;
           System.out.println(a);
           }
           catch(ArrayIndexOutOfBoundsException ex){
               System.out.println("handle");
           }
       }
       catch(Exception ex){
           System.out.println("exception class ");
       }
    }
} 
--------------------------------------------------------------
public class Main {
    public static void main(String[] args) {
       try{
           try{
               String name=null;
               System.out.println(name.length());
           }
           catch(NullPointerException ex){
               System.out.println(ex);
           }
           int a=9/0;
           System.out.println(a);
       }
       catch(Exception ex){
           System.out.println(ex);
       }
    }
} 
-------------------------------------------------
public class Main {
    public static void main(String[] args) {
      try{
          int a=9/0;
          System.out.println(a);
      }
      catch(Exception ex){
          System.out.println("handle");
          return;
      }
      finally{
          System.out.println("finally block");
      }
      
    }
} 
----------------------------------------------------------------
when want to stop finally block :
exit() --->class System class -->parameter --->int 
exit() =>static 
public class Main {
    public static void main(String[] args) {
      try{
          int a=9/0;
          System.out.println(a);
      }
      catch(Exception ex){
          System.out.println("handle");
          System.exit(0);
      }
      finally{
          System.out.println("finally block");
      }
      System.out.println("rest of code ");
    }
} 
----------------------------------------------------------------










