Multithreading : 
-----------------------------------------------------------------
methods of multithreading : 
a)yield() method 
b)sleep() method 
c)join() method 

----------------------------------------------------------------
MethodsInMultithreading1.java 

yield method :
The yield() method of thread class causes the currently executing thread object to temporarily pause and allow other threads to execute.

class A extends Thread {
    public void run() {
        for (int i = 1; i <= 3; i++) {

            System.out.println("parent child");
        }
    }
}

public class MethodsInMultithreading1 {
    public static void main(String[] args) {
        A k = new A();
        k.start();
        A p = new A();
        p.start();
        for (int i = 1; i <= 3; i++) {
            Thread.yield();
            System.out.println("main thread");
        }
    }
}
-----------------------------------------------------------------
MethodsInMultithreading2.java

when direct call sleep method then it give thread interrupted exception 
sleep it run two or more thread simultaneously 
it give time 


class A extends Thread {
    public void run() {
        for (int i = 1; i <= 5; i++) {
            try {
                Thread.sleep(2000);
            } catch (InterruptedException ex) {

            }
            System.out.print(i + " ");
        }
    }
}

public class MethodsInMultithreading2 {
    public static void main(String[] args) {
        A p = new A();
        A k = new A();
        p.start();
        k.start();
    }
}

sleep -->negative time 
exception :illegal argument exception 
---------------------------------------------------------------
MethodsInMultithreading3.java 

join method : 
class A extends Thread {
    public void run() {
        for (int i = 1; i <= 3; i++) {
            try {
                Thread.sleep(2000);
            } catch (Exception ex) {
            }
            System.out.print(i + " ");
        }

    }
}

public class MethodsInMultithreading3 {
    public static void main(String[] args) {
        A p = new A();
        A k = new A();

        p.start();
        try {
            p.join();
        } catch (InterruptedException ex) {
        }
        k.start();
    }
}
--------------------------------------------------------------
interrupt method : 

class A extends Thread {
    public void run() {
        for (int i = 1; i <= 3; i++) {
            try {
                Thread.sleep(1000);
            } catch (Exception ex) {

            }
            System.out.print(i+" ");
        }
    }
}

public class MethodsInMultithreading4 {
    public static void main(String[] args) {
        A p = new A();
        p.start();
        p.interrupt();
        A k = new A();
        k.start();
    }
} 






